name: Process Notes

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "notes2rdf"
    cancel-in-progress: false

on:
    push:
      branches:
        - master
      paths-ignore:
        - 'notes.ttl'
        - 'README.md'
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    generate-ttl:
        runs-on: ubuntu-latest
        env:
            CI_COMMIT_MESSAGE: Generate new notes.ttl
            CI_COMMIT_AUTHOR: Github Actions
        steps:
            - uses: actions/checkout@v3
            - name: Generate TTL
              id: generate-ttl
              uses: jmoney/notes2rdf@main
              with:
                notes-root: ./markdown
                base-uri: "https://www/jmoney.dev/notes/notes"
                output-file: ./notes.ttl
            - uses: actions/upload-artifact@v2
              with:
                name: notes-ttl
                path: notes.ttl
    upload-notes-ttl:
        runs-on: ubuntu-latest
        needs: generate-ttl
        steps:
            - uses: actions/checkout@v3
            - uses: actions/download-artifact@v2
              with:
                name: notes-ttl
            - name: Verify Changed files
              uses: tj-actions/verify-changed-files@v16
              id: verify-changed-files
              with:
                files: |
                    notes.ttl
            - name: Upload TTL
              id: upload-ttl
              if: steps.verify-changed-files.outputs.files_changed
              uses: jmoney/dataworld-file-upload-action@main
              with:
                token: ${{ secrets.DATAWORLD_PAT }}
                agentdatasetid: "jmoney8080/ddw-catalogs"
                file: notes.ttl
                filename: test-notes.ttl
    generate-readme-md:
        runs-on: ubuntu-latest
        needs: generate-ttl
        steps:
            - uses: actions/checkout@v3
            - name: Generate notes catalog
              run: python ./.template/readme/generated_data.py > notes.json
            - name: Generate README.md
              uses: cuchi/jinja2-action@v1.2.0
              with:
                template: ./.template/readme/README.md.j2
                output_file: README.md
                data_file: notes.json
                data_format: json
            - uses: actions/upload-artifact@v2
              with:
                name: readme-md
                path: README.md
    commit-files:
        runs-on: ubuntu-latest
        needs: [generate-ttl, generate-readme-md]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/download-artifact@v2
              with:
                name: notes-ttl
            - uses: actions/download-artifact@v2
              with:
                name: readme-md
            - name: Verify Changed files
              uses: tj-actions/verify-changed-files@v16
              id: verify-changed-files
              with:
                files: |
                    notes.ttl
                    README.md
            - name: Add notes.ttl
              if: contains(steps.verify-changed-files.outputs.changed_files, 'notes.ttl')
              run: git add notes.ttl
            - name: Add README.md
              if: contains(steps.verify-changed-files.outputs.changed_files, 'README.md')
              run: git add README.md
            - name: Commit changes
              if: steps.verify-changed-files.outputs.files_changed == 'true'
              run: |
                git config --local user.email "Github Actions"
                git config --local user.name "github-actions[bot]"
                git commit --message "Update ${{ steps.verify-changed-files.outputs.changed_files }}"
                git push origin HEAD:${{ github.ref }}
